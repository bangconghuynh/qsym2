default:
  image: rust:latest

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

stages:
  - Build
  - Unit Tests
  - Deploy

check:
  stage: Build
  tags:
    - archon
  before_script:
    - export RUSTFLAGS="-Cdebuginfo=2 --cfg=tarpaulin"
    - apt-get update
    - apt-get install gfortran build-essential cmake libhdf5-dev -y
  script:
    - cargo check --release --verbose --features full,sandbox --color always
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /\/doc-/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

unit_tests:
  stage: Unit Tests
  tags:
    - archon
  before_script:
    - apt-get update
    - apt-get install gfortran build-essential cmake libhdf5-dev -y
  script:
    - cargo test -r --features full,sandbox -- --include-ignored
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /\/doc-/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

tarpaulin:
  stage: Unit Tests
  tags:
    - archon
  coverage: '/^\d+.\d+% coverage/'
  before_script:
    - export RUSTFLAGS="-Cdebuginfo=2 --cfg=tarpaulin"
    - apt-get update
    - apt-get install gfortran build-essential cmake libhdf5-dev -y
  script:
    - cargo install cargo-tarpaulin
    - cargo tarpaulin -t 1800 --release --workspace --engine llvm --no-dead-code --features full,sandbox --color always
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /\/doc-/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# cibuildwheel-linux:
#   stage: Deploy
#   tags:
#     - archon
#   image: python:3.13
#   services:
#     - name: docker:27.2.0-dind
#       entrypoint: ["env", "-u", "DOCKER_HOST"]
#       command: ["dockerd-entrypoint.sh"]
#   variables:
#     DOCKER_HOST: tcp://docker:2375/
#     DOCKER_DRIVER: overlay2
#     DOCKER_TLS_CERTDIR: ""
#   before_script:
#     - export TAG=$(git describe --tags --abbrev=0)
#     - echo TAG=$TAG >> cibuildwheel_linux.env
#     - echo GE_JOB_ID=$CI_JOB_ID >> cibuildwheel_linux.env
#   script:
#     - curl -sSL https://get.docker.com/ | sh
#     - python -m pip install cibuildwheel==2.23.0
#     - cibuildwheel --platform linux --output-dir wheelhouse
#     - tar -czvf qsym2-$TAG-wheels.tar.gz wheelhouse/*
#   artifacts:
#     paths:
#       - qsym2-*-wheels.tar.gz
#     expire_in: never
#     reports:
#       dotenv: cibuildwheel_linux.env
#   rules:
#     - if: $CI_COMMIT_TAG

release:
  stage: Deploy
  tags:
    - archon
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Running `release` job for $TAG..."
  release:
    name: "Release $TAG"
    description: "Release $TAG created using the release-cli provided by GitLab."
    ref: "$CI_COMMIT_SHA"
    tag_name: "$TAG"
    assets:
      links:
        - name: "Linux Python wheels"
          url: "https://gitlab.com/bangconghuynh/qsym2/-/jobs/${GE_JOB_ID}/artifacts/file/qsym2-$TAG-wheels.tar.gz"
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: cibuildwheel-linux
      artifacts: true

mkdocs:
  stage: Deploy
  image: python:latest
  script:
    - pip install "mkdocs-material[imaging]"
    - pip install mkdocs-git-revision-date-localized-plugin
    - cd docs
    - mkdocs build --site-dir public
    - cd ..
    - mv docs/public .
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /\/doc-/

pages:
  stage: Deploy
  tags:
    - archon
  variables:
    RUSTDOCFLAGS: --html-in-header katex.html
  before_script:
    - apt-get update
    - apt-get install gfortran build-essential cmake libhdf5-dev -y
  script:
    - cargo doc --no-deps --features full,python,sandbox
    - mv target/doc public/api
    - echo '<meta http-equiv="refresh" content="0; url=qsym2/index.html">' > public/api/index.html
  needs:
    - job: mkdocs
      artifacts: true
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /\/doc-/
